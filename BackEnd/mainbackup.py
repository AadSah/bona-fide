#plag-check using first 3 urls...fast but not accurate a bit...
import getURL
import webSearch
# import compareContent
import comparefuzzy

content = open("fileInputContent.txt","r+")
matched = open("matchedSources.txt","w+")
highlight = open("highlightedText.txt","w+")
linecount=0
# plagflag=0
plagper=0

for contentline in content:

	if(contentline!="\n"):	#get rid of unrequired lines read
		
		linecount+=1	#keep a count of content lines 

		# URLsToCheck = [None]*3	#For checking first 3 URLs
		URLsToCheck = None
		URLsToCheck = getURL.URLFinder(contentline)

		# for j in range(3):
		# if(URLsToCheck[j]!=None):
		if(URLsToCheck!=None):
			# print("Checking: "+URLsToCheck[j]+"\n")
			# webSearch.searchResults(URLsToCheck[j])
			webSearch.searchResults(URLsToCheck)
			# print("Scrapped Text from "+URLsToCheck[j]+"\n")
		# if(compareContent.check(contentline)):
		# 	# print("A Plag Found!!!...\n")
		# 	plagflag+=1
		# 	break
		somevar = comparefuzzy.check(contentline)

		# if(somevar>75):
		# 	plagper += 100	#kept a threshold value of 75% as per the performance of the algo seen before
		# else:
		plagper += somevar

		if(somevar>75): #kept 75 so as to compensate for the errors generated by common words and sentences
			matched.write("Line-"+str(linecount)+"::"+URLsToCheck+"\n")	#writing for matched sources
			highlight.write("<font color=\"red\"><b>"+contentline+"</b></font>\n")	#writing for highlighting
		else:
			highlight.write(contentline)	#writing non-highlighted

plagper /= linecount	#getting the percentage
# plagper *= 100
# print("Percentage Plagiarised = "+ str(plagper) +"%\n")
print(str(plagper))
# print("Percentage Unique = "+ str(100-plagper) +"%\n\n")
highlight.close()
matched.close()
content.close()